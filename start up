#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include "IotWebConf.h"
#include "IotWebConfUsing.h"
#define STRING_LEN 128
#define NUMBER_LEN 32
const char thingName[] = "Kigraberr";
const char wifiInitialApPassword[] = "123412345";
DNSServer dnsServer;
ESP8266WebServer server(80);
IotWebConf iotWebConf(thingName, &dnsServer, &server, wifiInitialApPassword);
char iotssid[STRING_LEN];
char iotssidpass[STRING_LEN];
IotWebConfTextParameter ssid_io = IotWebConfTextParameter("HomeSsid", "ssid", iotssid, STRING_LEN);
IotWebConfTextParameter ssid_pass_io = IotWebConfTextParameter("Homepass", "ssidpass", iotssidpass, STRING_LEN);
bool iotWeb=false;
void handleRoot();
void setup() {
Serial.begin(115200);
   iotWebConf.addSystemParameter(&ssid_io);
  iotWebConf.addSystemParameter(&ssid_pass_io);
  iotWebConf.init();
  
  if(schel>=30){WiFi.disconnect();delay(100); WiFi.mode(WIFI_AP_STA);iotWeb=true;}// WiFi.mode(WIFI_AP_STA);delay(100); WiFi.softAP("KGrab", "123412345");}
//  while(WiFi.status()!=WL_CONNECTED)delay(500);
//  WiFi.mode(WIFI_STA);
if(!iotWeb){

}
if(iotWeb){

   server.on("/", handleRoot);
  server.on("/config", []{ iotWebConf.handleConfig(); });
  server.onNotFound([](){ iotWebConf.handleNotFound(); });

  iotWebConf.skipApStartup();
///iotWebConf.setWifiConnectionCallback();
   

}
}

loop(){
 if(!iotWeb){}


if(iotWeb){

    iotWebConf.doLoop();
}
}




void handleRoot()
{
  // -- Let IotWebConf test and handle captive portal requests.
  if (iotWebConf.handleCaptivePortal())
  {
    // -- Captive portal request were already served.
    return;
  }
  String s = "<!DOCTYPE html><html lang=\"en\"><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\"/>";
  s += "<title>IotWebConf 01 Minimal</title></head><body>";
  s += "Go to <a href='config'>configure page</a> to change settings.";
  s += "</body></html>\n";

  server.send(200, "text/html", s);
}
